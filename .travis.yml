language: generic

sudo: false

notifications:
    email: false

# Only build pushes from the master branch. PRs are always built. The master
# build will also push the newly built docs to fatiando.org/dev
branches:
    only:
        - master

os:
    - linux

env:
    global:
        - COVERAGE=false
        - CONDA_PREFIX=/home/travis/miniconda3

    matrix:
        - PYTHON=3.5 GMT=5.4.1
        #- PYTHON=3.5 GMT=trunk
        - PYTHON=3.6 GMT=5.4.1 COVERAGE=true
        #- PYTHON=3.6 GMT=trunk

matrix:
    allow_failures:
        - env: GMT=trunk

before_install:
    # Get Miniconda from Continuum
    # Need to source the script to set the PATH variable in this environment
    # (not the scripts environment)
    - source ci/install-miniconda.sh
    # Create a conda env to install required libraries
    - conda update --yes conda
    #- conda create -n testenv --yes pip python=$PYTHON
    #- source activate testenv
    - conda install --yes python=$PYTHON pip -c conda-forge
    # Install dependencies
    - conda install --yes --file requirements.txt -c conda-forge
    - if [ "$COVERAGE" == "true" ]; then pip install coveralls==0.5; fi
    - if [ "$GMT" == "trunk" ]; then conda install --yes --file requirements-gmt.txt -c conda-forge; fi
    # Install gmt from conda-forge or checkout and build trunk (place in conda
    # path)
    - if [ "$GMT" == "trunk" ]; then ./ci/install-gmt-trunk.sh; else conda install --yes gmt=$GMT -c conda-forge; fi
    # Show installed pkg information for postmortem diagnostic
    - conda list

install:
    # Package and install
    - python setup.py sdist --formats=gztar
    - pip install dist/*.tar.gz

script:
    # Run the test suite
    - if [ "$COVERAGE" == "true" ]; then make coverage; else make test; fi
    # Check code for PEP8 style
    - make pep8

after_success:
    - if [ "$COVERAGE" == "true" ]; then coveralls; fi
